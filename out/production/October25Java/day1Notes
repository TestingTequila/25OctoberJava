Variables: Variables are like boxes/jars/containers that are made to store/hold something
Syntax of Variable:

1. dataType variableName = variableValue;

2. dataType variableName;
   variableName = variableValue;
===========================================================================================
Two types of data Types:
--Primitive data Types
  a) We know in advance how much space they will occupy
  b) We don't need objects in order to use them
  Integer Family--byte[1], short[2], int[4], long[8], Floating point family-->float[4], double[8]
                  char[], boolean[]

--Non-primitive data types
    a) We don't know in advance how much space they will occupy
    b) We need objects in order to use them
===============================================================================
1. byte and short should not be used for mathematical operations and will also not be allowed by JVM
2. char will start behaving like a number if you perform mathematical operations over it
==========================================STATEMENTS=============================
Whenever we have to make decisions, we use statements
//If Statement
        if(condition)
        {
          this will execute only if condition is true
        }
In Multiple if statement, all the conditions will be verified even if any condition is true


//If-else Statement
        if(condition)
        {
          this will execute only if condition is true
        }
        else
        {
           this will execute only if condition is false
        }

// In multiple ifs with else, else part will always execute if the last condition before else part is false
// In multiple else if statement, once the condition is true, it will not bother to check other conditions
// Use switch for exact value match. Will not work for range >, <, =>, =< etc. For such, if else or is-else if is preferred
   switch can be used on Strings and all integer members except long [String, char, byte, short, int]

==============Loops=================================
-Repetitive Tasks
  -while loop
   int i=value;
   while(condition)
   {
      this will execute only if condition is true;
      I/D;
   }

  -for loop
     for(int i=value;condition;I/D)
     {
        this will execute only if condition is true;
     }

     We should use while loop under below scenario:
     when the number of iterations is not fixed
     infinite loading
     waiting for any page element
     calender handling
     pagination

  -advanced for loop

==========================ARRAYS===========================
To hold multiple values
li= 0
size of an array = nameOfArray.length
hi=size-1


======
12 values
li=0;
hi=11

==============
Arrays can be handled by using
1. while loop
2. for loop
3. advanced for loop
4. Arrays.toString(NameOfArray) -- Only for display or print purpose

================================
A class is just like a Template
Object: Every copy of the template is known as its object

=> A class is a template and every copy of that template is known as its object
To create Object of a class:
ClassNameWhoseObjectWeWantToCreate aliasName = new ClassNameWhoseObjectWeWantToCreate();

===================Class Date [27th Nov]=======================================================
Heap and Stack memory

Methods:

-Statements and loops
-Array/Collection
-Methods
 accessModifier[public/private/protected] returnType[void/DataType] methodName(can/t parameters)
 {
    Action over class variable/s;
 }



